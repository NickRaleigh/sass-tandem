@import 'include-media';
@import 'perch-array';
@import 'perch-parse-helper';

@mixin perch($childrenObj:null, $settingsObj:()) {

  @if(type-of($settingsObj) == 'list') {
    @include perch-array($childrenObj, $settingsObj);
  }

  @else {                                          

    // loop over entire object                     
    @each $breakPoint, $settings in $settingsObj { 

        $settingHasFontSize: false;
        $settingHasPadding: false;
        $settingHasMargin: false;
        $settingHasDimensions: false;
        $settingHasMinMaxWidth: false;

        $fontSizeSetting: false;
        $paddingSetting: false;
        $marginSetting: false;
        $dimensionSetting: false;
        $minMaxWidthSetting: false;
        $minMaxHeightSetting: false;

      //loop over each setting 
      @each $target, $setting in $settings {

        $selector: map-get($childrenObj,$target);

        // turn all safe whitespaces into neutral character `
        $safeWhiteSpacePatterns: [
          ', ',
          ' )',
          '( ',
          ' - ',
          ' x ',
          ' . '
        ];

        @each $pattern in $safeWhiteSpacePatterns {
          $setting: str-replace(quote($setting), $pattern, '`');
        }

        // split all spaces into array
        $rules: str-split($setting, ' ');

        // loop over array and reassign variables above
        $rulesPatterns: (
          fontsize: ['1','2','3','4','5','6','7','8','9','0','.'],
          padding: 'p(',
          margin: 'm(',
          dimension: 'd(',
          minMaxWidth: 'mw(',
          minMaxHeight: 'mh('
        );

        @each $rule in $rules {
          @each $ruleName, $pattern in $rulesPatterns {

            // Parse font size
            @if ($ruleName == fontsize) {
              $rule-first-char: str-slice(quote($rule), 1,1);
              @each $number in $pattern {
                @if ($number == $rule-first-char) {
                  $settingHasFontSize: true;
                  $fontSizeSetting: unquote($rule);
                }
              }
            }
          }
        }

        //check target & use declaration:
        @if ($target == this) {
          //check breakpoint & assign css
          @if ($breakPoint == 'default') {
            @if ($settingHasFontSize) { font-size: $fontSizeSetting; }
          } 
          @else {
            @include media('screen', '#{$breakPoint}') {
              @if ($settingHasFontSize) { font-size: $fontSizeSetting; }
            }
          }
        }
        @else {
          #{$selector} {
            @if ($breakPoint == 'default') {
              @if ($settingHasFontSize) { font-size: $fontSizeSetting; }
            } 
            @else {
              @include media('screen', '#{$breakPoint}') {
                @if ($settingHasFontSize) { font-size: $fontSizeSetting; }
              }
            }
          }
        }
      }
    }
  }
}
